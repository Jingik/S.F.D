events { }

http {
    upstream jenkins {
        keepalive 32;
        server jenkins-container:7070;
    }

    upstream spring {
        server spring-container:8080;
    }

    upstream react {
        server react-container:80;
    }

    # CORS 설정을 위한 매핑
    map $http_origin $cors_origin {
        default "";
        "~^https?://(j11b103\\.p\\.ssafy\\.io|localhost:3000)$" $http_origin;
    }

    map $request_method $cors_methods {
        default "GET, POST, PUT, DELETE, OPTIONS";
    }

    # Required for Jenkins websocket agents
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # HTTPS for Jenkins and React
    server {
        listen 443 ssl;
        server_name j11b103.p.ssafy.io;

        ssl_certificate /etc/letsencrypt/live/j11b103.p.ssafy.io/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/j11b103.p.ssafy.io/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;

        # React Application Proxy
        location / {
            proxy_pass http://react;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;

            # Add CORS headers if needed
            add_header 'Access-Control-Allow-Origin' $cors_origin always;
            add_header 'Access-Control-Allow-Methods' $cors_methods always;
            add_header 'Access-Control-Allow-Headers' 'Origin, Accept, Content-Type, Authorization, X-Requested-With';
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }

        # Jenkins 관련 설정
        location /jenkins {
            add_header 'Access-Control-Allow-Origin' $cors_origin always;
            add_header 'Access-Control-Allow-Methods' $cors_methods always;
            add_header 'Access-Control-Allow-Headers' 'Origin, Accept, Content-Type, Authorization';
            add_header 'Access-Control-Allow-Credentials' 'true' always;

            proxy_pass http://jenkins;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;

            # Websockets
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }

        # Spring 관련 설정
        location /api {
            # OPTIONS 메서드 처리
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $cors_origin always;
                add_header 'Access-Control-Allow-Methods' $cors_methods always;
                add_header 'Access-Control-Allow-Headers' 'Origin, Accept, Content-Type, Authorization, X-Requested-With';
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;  # No Content 응답 반환
            }

            # 실제 API 요청 처리
            add_header 'Access-Control-Allow-Origin' $cors_origin always;
            add_header 'Access-Control-Allow-Methods' $cors_methods always;
            add_header 'Access-Control-Allow-Headers' 'Origin, Accept, Content-Type, Authorization, X-Requested-With';
            add_header 'Access-Control-Allow-Credentials' 'true' always;

            proxy_pass http://spring;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
			proxy_set_header Origin http://localhost:3000;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # HTTP for static content and certificate challenges
    server {
        listen 80;
        server_name j11b103.p.ssafy.io;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Redirect all HTTP requests to HTTPS
        location / {
            return 308 https://$host$request_uri;
        }
    }
}

